/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* 
>firstly i have used the universal selector (*) to set a reset for all the browsers and declared some Css properties margin, padding and box-sizing
>>Then second i have declared and assigned some css properties to the body font{family,weight,size} and line height-->unit used-->vh(viewport height)
>>>Third in class header used bacground-image: linear-gradient()-->{sets the background image(s) of an element} then {to the right bottom,}--->meaning-->the color will go from left to right changing and "bottom" used here means it will go to from top left cornor to the bottom right cornor shading
>>>>Fourth used clip-path property to clip the page to a certain shape
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}
.header {
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.801),
      rgba(40, 180, 133, 0.801)
    ),
    url(../img/hero-small.jpg);
  height: 95vh;
  position: relative;
  background-size: cover;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}
.logoBox {
  position: absolute;
  top: 40px;
  left: 40px;
}
.logo {
  height: 35px;
}
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}
.heading-primary {
  color: #fff;
  position: relative;
  text-transform: uppercase;
  margin-bottom: 60px;
}
.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: moveInleft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}
.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;
}
@keyframes moveInleft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/*CSS BUTTON
OBJECTIVES-->
WHAT ARE PSEUDO ELEMENTS AND PSEUDO CLASSES ARE
HOW AND WHY TO USE ::AFTER PSEUDO-ELEMENTS;
HOW TO CREATE A CREATIVE HOVER ANIMATION EFFECT USING THE TRANSITION PROPERTY*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  border-radius: 100px;
  display: inline-block;
  transition: all, 0.2s;
  position: relative;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}
.btn-white {
  background-color: #fff;
  color: #777;
}
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn-white::after {
  background-color: #fff;
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}
